{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luanmessias/dev/toni-armas-blog/src/context/MobileMenu.tsx\";\nimport React, { createContext, useState, useContext } from 'react';\nconst MobileMenuContext = /*#__PURE__*/createContext(null);\n\nconst MobileMenuProvider = ({\n  children\n}) => {\n  const {\n    0: mobileMenu,\n    1: setMobileMenu\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MobileMenuContext.Provider, {\n      value: {\n        mobileMenu,\n        setMobileMenu\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nconst useMobileMenuContext = () => {\n  const context = useContext(MobileMenuContext);\n  if (!context) throw new Error('useMobileMenu must be used within a MobileMenuProviders');\n  return context;\n};\n\nexport { useMobileMenuContext, MobileMenuProvider };","map":{"version":3,"sources":["/home/luanmessias/dev/toni-armas-blog/src/context/MobileMenu.tsx"],"names":["React","createContext","useState","useContext","MobileMenuContext","MobileMenuProvider","children","mobileMenu","setMobileMenu","useMobileMenuContext","context","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AAWA,MAAMC,iBAAiB,gBAAGH,aAAa,CAAqB,IAArB,CAAvC;;AAEA,MAAMI,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmD;AAC5E,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE;AAAA,2BACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE;AAAEK,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAnC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAVD;;AAYA,MAAMG,oBAAoB,GAAG,MAAmB;AAC9C,QAAMC,OAAO,GAAGP,UAAU,CAACC,iBAAD,CAA1B;AACA,MAAI,CAACM,OAAL,EACE,MAAM,IAAIC,KAAJ,CAAU,yDAAV,CAAN;AACF,SAAOD,OAAP;AACD,CALD;;AAOA,SAASD,oBAAT,EAA+BJ,kBAA/B","sourcesContent":["import React, { createContext, useState, useContext } from 'react'\n\ntype ChildrenPropTtypes = {\n  children: React.ReactNode\n}\n\ntype ContextType = {\n  mobileMenu: boolean\n  setMobileMenu: (darkMode: boolean) => void\n}\n\nconst MobileMenuContext = createContext<ContextType | null>(null)\n\nconst MobileMenuProvider = ({ children }: ChildrenPropTtypes): JSX.Element => {\n  const [mobileMenu, setMobileMenu] = useState(false)\n\n  return (\n    <>\n      <MobileMenuContext.Provider value={{ mobileMenu, setMobileMenu }}>\n        {children}\n      </MobileMenuContext.Provider>\n    </>\n  )\n}\n\nconst useMobileMenuContext = (): ContextType => {\n  const context = useContext(MobileMenuContext)\n  if (!context)\n    throw new Error('useMobileMenu must be used within a MobileMenuProviders')\n  return context\n}\n\nexport { useMobileMenuContext, MobileMenuProvider }\n"]},"metadata":{},"sourceType":"module"}