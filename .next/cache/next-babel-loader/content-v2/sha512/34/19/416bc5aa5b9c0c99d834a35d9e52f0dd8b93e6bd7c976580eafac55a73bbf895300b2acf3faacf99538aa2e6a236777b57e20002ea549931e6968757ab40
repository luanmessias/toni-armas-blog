{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/luanmessias/dev/toni-armas-blog/src/context/DarkMode.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react';\nvar DarkModeContext = /*#__PURE__*/createContext(null);\n\nvar DarkModeProvider = function DarkModeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      darkMode = _useState[0],\n      setDarkMode = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DarkModeProvider, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n\n_c = DarkModeProvider;\n\nvar useDarkModeContext = function useDarkModeContext() {\n  _s2();\n\n  var context = useContext(DarkModeContext);\n  if (!context) throw new Error('useDarkMode must be used within a DarkModeProviders');\n  return context;\n};\n\n_s2(useDarkModeContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useDarkModeContext, DarkModeProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"sources":["/home/luanmessias/dev/toni-armas-blog/src/context/DarkMode.tsx"],"names":["React","createContext","useState","useContext","DarkModeContext","DarkModeProvider","children","darkMode","setDarkMode","useDarkModeContext","context","Error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AAWA,IAAMC,eAAe,gBAAGH,aAAa,CAAqB,IAArB,CAArC;;AAEA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAmD;AAAA;;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;;AAAA,kBAC1CJ,QAAQ,CAAC,IAAD,CADkC;AAAA,MACnEK,QADmE;AAAA,MACzDC,WADyD;;AAG1E,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA;AAAZ,KAAjC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CARD;;GAAMD,gB;;KAAAA,gB;;AAUN,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAmB;AAAA;;AAC5C,MAAMC,OAAO,GAAGP,UAAU,CAACC,eAAD,CAA1B;AACA,MAAI,CAACM,OAAL,EACE,MAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;AACF,SAAOD,OAAP;AACD,CALD;;IAAMD,kB;;AAON,SAASA,kBAAT,EAA6BJ,gBAA7B","sourcesContent":["import React, { createContext, useState, useContext } from 'react'\n\ntype ChildrenPropTtypes = {\n  children: React.ReactNode\n}\n\ntype ContextType = {\n  darkMode: boolean\n  setDarkMode: (darkMode: boolean) => void\n}\n\nconst DarkModeContext = createContext<ContextType | null>(null)\n\nconst DarkModeProvider = ({ children }: ChildrenPropTtypes): JSX.Element => {\n  const [darkMode, setDarkMode] = useState(true)\n\n  return (\n    <DarkModeContext.Provider value={{ darkMode, setDarkMode }}>\n      {children}\n    </DarkModeContext.Provider>\n  )\n}\n\nconst useDarkModeContext = (): ContextType => {\n  const context = useContext(DarkModeContext)\n  if (!context)\n    throw new Error('useDarkMode must be used within a DarkModeProviders')\n  return context\n}\n\nexport { useDarkModeContext, DarkModeProvider }\n"]},"metadata":{},"sourceType":"module"}