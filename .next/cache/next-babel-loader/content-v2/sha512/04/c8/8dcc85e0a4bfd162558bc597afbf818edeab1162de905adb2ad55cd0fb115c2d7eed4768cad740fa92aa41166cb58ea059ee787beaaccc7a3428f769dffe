{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/luanmessias/dev/toni-armas-blog/src/components/atoms/Theme/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDarkModeContext } from '@context/DarkMode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './styles';\n\nvar Theme = function Theme(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useDarkModeContext = useDarkModeContext(),\n      darkMode = _useDarkModeContext.darkMode;\n\n  var setTheme = function setTheme() {\n    if (darkMode) {\n      return darkTheme;\n    }\n\n    return lightTheme;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: setTheme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Theme, \"5kkcZHmpL5aYAKSQi0OReRPszoU=\", false, function () {\n  return [useDarkModeContext];\n});\n\n_c = Theme;\nexport default Theme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"sources":["/home/luanmessias/dev/toni-armas-blog/src/components/atoms/Theme/index.tsx"],"names":["React","useDarkModeContext","ThemeProvider","lightTheme","darkTheme","Theme","children","darkMode","setTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAeA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA8C;AAAA;;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;;AAAA,4BACrCL,kBAAkB,EADmB;AAAA,MAClDM,QADkD,uBAClDA,QADkD;;AAG1D,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAiB;AAChC,QAAID,QAAJ,EAAc;AACZ,aAAOH,SAAP;AACD;;AACD,WAAOD,UAAP;AACD,GALD;;AAOA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEK,QAAtB;AAAA,cAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAXD;;GAAMD,K;UACiBJ,kB;;;KADjBI,K;AAaN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useDarkModeContext } from '@context/DarkMode'\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './styles'\n\ntype ChildrenProps = {\n  children: React.ReactNode\n}\n\ntype ThemeType = {\n  bg_body: string\n  bg_dark: string\n  bg_light: string\n  txt_color_dark: string\n  txt_color_mid: string\n  txt_color_light: string\n}\n\nconst Theme = ({ children }: ChildrenProps): JSX.Element => {\n  const { darkMode } = useDarkModeContext()\n\n  const setTheme = (): ThemeType => {\n    if (darkMode) {\n      return darkTheme\n    }\n    return lightTheme\n  }\n\n  return <ThemeProvider theme={setTheme}>{children}</ThemeProvider>\n}\n\nexport default Theme\n"]},"metadata":{},"sourceType":"module"}