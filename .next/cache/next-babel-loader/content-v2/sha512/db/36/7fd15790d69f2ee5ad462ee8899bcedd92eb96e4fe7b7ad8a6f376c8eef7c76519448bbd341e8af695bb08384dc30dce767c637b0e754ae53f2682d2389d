{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luanmessias/dev/toni-armas-blog/src/components/atoms/Theme/index.tsx\";\nimport React from 'react';\nimport { useDarkModeContext } from '@context/DarkMode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './styles';\n\nconst Theme = ({\n  children\n}) => {\n  const {\n    darkMode\n  } = useDarkModeContext();\n\n  const setTheme = () => {\n    if (darkMode) {\n      return darkTheme;\n    }\n\n    return lightTheme;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: setTheme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Theme;","map":{"version":3,"sources":["/home/luanmessias/dev/toni-armas-blog/src/components/atoms/Theme/index.tsx"],"names":["React","useDarkModeContext","ThemeProvider","lightTheme","darkTheme","Theme","children","darkMode","setTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAeA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8C;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAeN,kBAAkB,EAAvC;;AAEA,QAAMO,QAAQ,GAAG,MAAiB;AAChC,QAAID,QAAJ,EAAc;AACZ,aAAOH,SAAP;AACD;;AACD,WAAOD,UAAP;AACD,GALD;;AAOA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEK,QAAtB;AAAA,cAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;AAaA,eAAeD,KAAf","sourcesContent":["import React from 'react'\nimport { useDarkModeContext } from '@context/DarkMode'\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './styles'\n\ntype ChildrenProps = {\n  children: React.ReactNode\n}\n\ntype ThemeType = {\n  bg_body: string\n  bg_dark: string\n  bg_light: string\n  txt_color_dark: string\n  txt_color_mid: string\n  txt_color_light: string\n}\n\nconst Theme = ({ children }: ChildrenProps): JSX.Element => {\n  const { darkMode } = useDarkModeContext()\n\n  const setTheme = (): ThemeType => {\n    if (darkMode) {\n      return darkTheme\n    }\n    return lightTheme\n  }\n\n  return <ThemeProvider theme={setTheme}>{children}</ThemeProvider>\n}\n\nexport default Theme\n"]},"metadata":{},"sourceType":"module"}