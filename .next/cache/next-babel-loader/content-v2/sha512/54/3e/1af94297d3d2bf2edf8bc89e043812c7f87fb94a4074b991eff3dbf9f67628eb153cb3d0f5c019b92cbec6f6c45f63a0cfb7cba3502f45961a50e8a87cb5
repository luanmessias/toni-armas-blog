{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/luanmessias/dev/toni-armas-blog/src/components/organisms/PostList/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    blogPosts {\\n      id\\n      created_at\\n      Titulo\\n      foto {\\n        formats\\n      }\\n      descricao\\n      resumo\\n      youtube_video_url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LoadingSpinner from '@atoms/LoadingSpinner';\nimport PosCard from '@molecules/PostCard';\nimport { Container } from './styles';\nvar GET_ALL_POSTS = gql(_templateObject());\n\nvar PostList = function PostList() {\n  _s();\n\n  var _useQuery = useQuery(GET_ALL_POSTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":( an error happened\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: data.blogPosts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(PosCard, {\n          photo_url: \"http://localhost:1337\".concat(post.foto.formats.large.url),\n          post_date: post.created_at,\n          post_title: post.Titulo,\n          post_small_desc: post.resumo,\n          post_full_desc: post.descricao\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(PostList, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/luanmessias/dev/toni-armas-blog/src/components/organisms/PostList/index.tsx"],"names":["React","gql","useQuery","LoadingSpinner","PosCard","Container","GET_ALL_POSTS","PostList","data","loading","error","blogPosts","map","post","foto","formats","large","url","created_at","Titulo","resumo","descricao","id"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,IAAMC,aAAa,GAAGL,GAAH,mBAAnB;;AAgBA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AAAA;;AAAA,kBACDL,QAAQ,CAACI,aAAD,CADP;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;AAAA,MACpBC,OADoB,aACpBA,OADoB;AAAA,MACXC,KADW,aACXA,KADW;;AAGlC,MAAID,OAAJ,EAAa;AACX,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,gBACGF,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,4BACtB,QAAC,OAAD;AAEE,UAAA,SAAS,iCAA0BA,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkBC,KAAlB,CAAwBC,GAAlD,CAFX;AAGE,UAAA,SAAS,EAAEJ,IAAI,CAACK,UAHlB;AAIE,UAAA,UAAU,EAAEL,IAAI,CAACM,MAJnB;AAKE,UAAA,eAAe,EAAEN,IAAI,CAACO,MALxB;AAME,UAAA,cAAc,EAAEP,IAAI,CAACQ;AANvB,WACOR,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,iBADsB;AAAA,OAAvB;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CA3BD;;GAAMf,Q;UAC6BL,Q;;;KAD7BK,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport LoadingSpinner from '@atoms/LoadingSpinner'\nimport PosCard from '@molecules/PostCard'\nimport { Container } from './styles'\n\nconst GET_ALL_POSTS = gql`\n  query {\n    blogPosts {\n      id\n      created_at\n      Titulo\n      foto {\n        formats\n      }\n      descricao\n      resumo\n      youtube_video_url\n    }\n  }\n`\n\nconst PostList = (): JSX.Element => {\n  const { data, loading, error } = useQuery(GET_ALL_POSTS)\n\n  if (loading) {\n    return <LoadingSpinner />\n  }\n\n  if (error) {\n    return <p>:( an error happened</p>\n  }\n\n  return (\n    <>\n      <Container>\n        {data.blogPosts.map(post => (\n          <PosCard\n            key={post.id}\n            photo_url={`http://localhost:1337${post.foto.formats.large.url}`}\n            post_date={post.created_at}\n            post_title={post.Titulo}\n            post_small_desc={post.resumo}\n            post_full_desc={post.descricao}\n          />\n        ))}\n      </Container>\n    </>\n  )\n}\n\nexport default PostList\n"]},"metadata":{},"sourceType":"module"}